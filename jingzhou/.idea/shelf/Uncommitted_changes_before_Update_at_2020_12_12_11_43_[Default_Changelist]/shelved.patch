Index: src/main/java/jingzhou/idclass/FollowId.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.idclass;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class FollowId implements Serializable {\r\n    private int follower;\r\n    private int researcher;\r\n\r\n    public int getFollower() {\r\n        return follower;\r\n    }\r\n\r\n    public void setFollower(int follower) {\r\n        this.follower = follower;\r\n    }\r\n\r\n    public int getResearcher() {\r\n        return researcher;\r\n    }\r\n\r\n    public void setResearcher(int researcher) {\r\n        this.researcher = researcher;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/idclass/FollowId.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/idclass/FollowId.java	(date 1607744330086)
@@ -3,22 +3,22 @@
 import java.io.Serializable;
 
 public class FollowId implements Serializable {
-    private int follower;
-    private int researcher;
+    private String follower;
+    private String researcher;
 
-    public int getFollower() {
+    public String getFollower() {
         return follower;
     }
 
-    public void setFollower(int follower) {
+    public void setFollower(String follower) {
         this.follower = follower;
     }
 
-    public int getResearcher() {
+    public String getResearcher() {
         return researcher;
     }
 
-    public void setResearcher(int researcher) {
+    public void setResearcher(String researcher) {
         this.researcher = researcher;
     }
 
Index: src/main/java/jingzhou/Controller/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.Controller;\r\n\r\nimport jingzhou.MySQLTable.Follow;\r\nimport jingzhou.MySQLTable.User;\r\nimport jingzhou.repository.FollowRepository;\r\nimport jingzhou.repository.UserRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport io.swagger.annotations.*;\r\n\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n@Api(value = \"用户控制类\")\r\n@RestController\r\npublic class UserController {\r\n    @Autowired\r\n    private UserRepository userRepository;\r\n\r\n    @Autowired\r\n    private FollowRepository followRepository;\r\n\r\n    @ApiOperation(value = \"注册接口\")\r\n    @PostMapping(\"register\")\r\n    public Map<String,Object> register(@RequestParam(\"username\") String username, @RequestParam(\"password\") String password){\r\n        HashMap<String,Object> result = new HashMap<>();\r\n        User user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        userRepository.save(user);\r\n        result.put(\"code\",200);\r\n        result.put(\"msg\",\"注册成功\");\r\n        return result;\r\n    }\r\n\r\n    @ApiOperation(value = \"登录接口\")\r\n    @PostMapping(\"login\")\r\n    public Map<String,Object> login(@RequestParam(\"username\") String username, @RequestParam(\"password\") String password){\r\n        HashMap<String,Object> result = new HashMap<>();\r\n        if(userRepository.findUserByUsernameAndPassword(username,password)!=null){\r\n            result.put(\"code\",200);\r\n            result.put(\"msg\",\"登录成功\");\r\n            return result;\r\n        }\r\n        else{\r\n            result.put(\"code\",400);\r\n            result.put(\"msg\",\"登录失败\");\r\n            return result;\r\n        }\r\n    }\r\n\r\n\r\n    /**关注相关的接口**/\r\n    @ApiOperation(value = \"关注用户\")\r\n    @PostMapping(\"follow\")\r\n    public Map<String,Object> follow(@RequestParam(\"followername\") String followername, @RequestParam(\"researchername\") String researchername){\r\n        HashMap<String,Object> result = new HashMap<>();\r\n        User follower = userRepository.findUserByUsername(followername);\r\n        User researcher = userRepository.findUserByUsername(researchername);\r\n        if (followRepository.findFollowByFollowerAndAndResearcher(follower.getId(),researcher.getId()) == null){\r\n            Follow follow = new Follow();\r\n            follow.setFollower(follower.getId());\r\n            follow.setResearcher(researcher.getId());\r\n            followRepository.save(follow);\r\n\r\n            result.put(\"code\",200);\r\n            result.put(\"msg\",\"关注成功\");\r\n            return result;\r\n        }\r\n        else {\r\n            result.put(\"code\",400);\r\n            result.put(\"msg\",\"关注失败\");\r\n            return result;\r\n        }\r\n    }\r\n\r\n    @ApiOperation(value = \"取消关注用户\")\r\n    @PostMapping(\"unfollow\")\r\n    public Map<String,Object> unfollow(@RequestParam(\"followername\") String followername, @RequestParam(\"researchername\") String researchername){\r\n        HashMap<String,Object> result = new HashMap<>();\r\n        User follower = userRepository.findUserByUsername(followername);\r\n        User researcher = userRepository.findUserByUsername(researchername);\r\n        Follow follow = followRepository.findFollowByFollowerAndAndResearcher(follower.getId(),researcher.getId());\r\n        if (follow != null){\r\n            followRepository.delete(follow);\r\n\r\n            result.put(\"code\",200);\r\n            result.put(\"msg\",\"取消关注成功\");\r\n            return result;\r\n        }\r\n        else {\r\n            result.put(\"code\",400);\r\n            result.put(\"msg\",\"取消关注失败\");\r\n            return result;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    @ApiOperation(value = \"获取用户\", notes = \"根据用户ID获取用户注册时间\")\r\n    @GetMapping(\"find_user_register_time/{id}\")\r\n    public String findUserById(@PathVariable(\"id\") Integer id){\r\n        return userRepository.findUserById((int)id).getTime().toString();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/Controller/UserController.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/Controller/UserController.java	(date 1607744353318)
@@ -1,8 +1,6 @@
 package jingzhou.Controller;
 
-import jingzhou.MySQLTable.Follow;
 import jingzhou.MySQLTable.User;
-import jingzhou.repository.FollowRepository;
 import jingzhou.repository.UserRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.*;
@@ -13,22 +11,23 @@
 import java.util.HashMap;
 import java.util.Map;
 
-@Api(value = "用户控制类")
+@Api(value = "个人信息管理子系统")
 @RestController
 public class UserController {
     @Autowired
     private UserRepository userRepository;
 
-    @Autowired
-    private FollowRepository followRepository;
-
     @ApiOperation(value = "注册接口")
     @PostMapping("register")
-    public Map<String,Object> register(@RequestParam("username") String username, @RequestParam("password") String password){
+    public Map<String,Object> register(@RequestParam("username") String username, @RequestParam("password") String password, @RequestParam("email") String email){
         HashMap<String,Object> result = new HashMap<>();
         User user = new User();
         user.setUsername(username);
         user.setPassword(password);
+        user.setIsauth(0);
+        user.setDownloadauth(0);
+        user.setEmail(email);
+        user.setTime(new Date());
         userRepository.save(user);
         result.put("code",200);
         result.put("msg","注册成功");
@@ -51,62 +50,57 @@
         }
     }
 
-
-    /**关注相关的接口**/
-    @ApiOperation(value = "关注用户")
-    @PostMapping("follow")
-    public Map<String,Object> follow(@RequestParam("followername") String followername, @RequestParam("researchername") String researchername){
+    @ApiOperation(value = "用户信息显示接口")
+    @GetMapping("showuserinfo/{username}")
+    public Map<String,Object> showuserinfo(@PathVariable("username") String username){
+        User user = userRepository.findUserByUsername(username);
         HashMap<String,Object> result = new HashMap<>();
-        User follower = userRepository.findUserByUsername(followername);
-        User researcher = userRepository.findUserByUsername(researchername);
-        if (followRepository.findFollowByFollowerAndAndResearcher(follower.getId(),researcher.getId()) == null){
-            Follow follow = new Follow();
-            follow.setFollower(follower.getId());
-            follow.setResearcher(researcher.getId());
-            followRepository.save(follow);
-
+        if(user!=null){
             result.put("code",200);
-            result.put("msg","关注成功");
+            result.put("msg","登录成功");
+            result.put("username",user.getUsername());
+            result.put("isauth",user.getIsauth());
+            result.put("downloadauth",user.getDownloadauth());
+            result.put("email",user.getEmail());
+            result.put("registertime",user.getTime());
             return result;
         }
-        else {
+        else{
             result.put("code",400);
-            result.put("msg","关注失败");
+            result.put("msg","显示用户信息失败");
             return result;
         }
     }
 
-    @ApiOperation(value = "取消关注用户")
-    @PostMapping("unfollow")
-    public Map<String,Object> unfollow(@RequestParam("followername") String followername, @RequestParam("researchername") String researchername){
+    @ApiOperation(value = "用户信息修改接口")
+    @PostMapping("changeuserinfo/{username}/{changecontent}")
+    public Map<String,Object> changeuserinfo(@PathVariable("username") String username, @PathVariable("changecontent") String changecontent, @RequestParam("content") String content){
+        User user = userRepository.findUserByUsername(username);
         HashMap<String,Object> result = new HashMap<>();
-        User follower = userRepository.findUserByUsername(followername);
-        User researcher = userRepository.findUserByUsername(researchername);
-        Follow follow = followRepository.findFollowByFollowerAndAndResearcher(follower.getId(),researcher.getId());
-        if (follow != null){
-            followRepository.delete(follow);
-
-            result.put("code",200);
-            result.put("msg","取消关注成功");
-            return result;
-        }
-        else {
+        if(user!=null){
+            if(changecontent.equals("password")){
+                user.setPassword(content);
+                result.put("code",201);
+                result.put("msg","修改用户密码成功");
+                return result;
+            }
+            else if(changecontent.equals("email")){
+                user.setEmail(content);
+                result.put("code",202);
+                result.put("msg","修改用户邮箱成功");
+                return result;
+            }
+            else{
+                result.put("code",401);
+                result.put("msg","修改用户信息类型错误");
+                return result;
+            }
+        }
+        else{
             result.put("code",400);
-            result.put("msg","取消关注失败");
+            result.put("msg","找不到用户");
             return result;
         }
     }
 
-
-
-
-
-
-
-    @ApiOperation(value = "获取用户", notes = "根据用户ID获取用户注册时间")
-    @GetMapping("find_user_register_time/{id}")
-    public String findUserById(@PathVariable("id") Integer id){
-        return userRepository.findUserById((int)id).getTime().toString();
-    }
-
 }
Index: src/main/java/jingzhou/MySQLTable/Portal.java
===================================================================
--- src/main/java/jingzhou/MySQLTable/Portal.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/Portal.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
@@ -1,37 +0,0 @@
-package jingzhou.MySQLTable;
-
-import javax.persistence.Entity;
-import javax.persistence.Id;
-
-@Entity
-public class Portal {
-    @Id
-    private int portalid;
-    private int authorid;
-    private String researchername;
-
-    public int getPortalid() {
-        return portalid;
-    }
-
-    public void setPortalid(int portalid) {
-        this.portalid = portalid;
-    }
-
-    public int getAuthorid() {
-        return authorid;
-    }
-
-    public void setAuthorid(int authorid) {
-        this.authorid = authorid;
-    }
-
-    public String getResearchername() {
-        return researchername;
-    }
-
-    public void setResearchername(String researchername) {
-        this.researchername = researchername;
-    }
-
-}
Index: src/main/java/jingzhou/repository/PaperRankRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/PaperRankRepository.java	(date 1607744330088)
+++ src/main/java/jingzhou/repository/PaperRankRepository.java	(date 1607744330088)
@@ -0,0 +1,10 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.PaperRank;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface PaperRankRepository extends JpaRepository<PaperRank, Integer> {
+
+}
Index: src/main/java/jingzhou/repository/ProjectRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/ProjectRepository.java	(date 1607744330088)
+++ src/main/java/jingzhou/repository/ProjectRepository.java	(date 1607744330088)
@@ -0,0 +1,9 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.Project;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface ProjectRepository extends JpaRepository<Project, Integer> {
+}
Index: src/main/java/jingzhou/repository/AuthUserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/AuthUserRepository.java	(date 1607744330087)
+++ src/main/java/jingzhou/repository/AuthUserRepository.java	(date 1607744330087)
@@ -0,0 +1,12 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.AuthUser;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface AuthUserRepository extends JpaRepository<AuthUser,String> {
+    AuthUser findAuthUserByUsername(String username);
+}
Index: src/main/java/jingzhou/repository/InstitutionRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/InstitutionRepository.java	(date 1607744330087)
+++ src/main/java/jingzhou/repository/InstitutionRepository.java	(date 1607744330087)
@@ -0,0 +1,11 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.Institution;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface InstitutionRepository extends JpaRepository<Institution, Integer> {
+    Institution findInstitutionByInstituteid(Integer instituteid);
+    Institution findInstitutionByInstitutionname(String institutionname);
+}
Index: src/main/java/jingzhou/Controller/SearchController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/Controller/SearchController.java	(date 1607744330083)
+++ src/main/java/jingzhou/Controller/SearchController.java	(date 1607744330083)
@@ -0,0 +1,48 @@
+package jingzhou.Controller;
+
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiOperation;
+import jingzhou.MySQLTable.AuthUser;
+import jingzhou.MySQLTable.Institution;
+import jingzhou.repository.AuthUserRepository;
+import jingzhou.repository.InstitutionRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.HashMap;
+import java.util.Map;
+
+@Api(value = "信息检索子系统")
+@RestController
+public class SearchController {
+    @Autowired
+    private AuthUserRepository authUserRepository;
+
+    @Autowired
+    private InstitutionRepository institutionRepository;
+
+    @ApiOperation(value = "获取科研人员信息接口")
+    @GetMapping("showauthuser/{username}")
+    public Map<String, Object> showauhtuser(@PathVariable("username") String username){
+        HashMap<String, Object> result = new HashMap<>();
+        AuthUser authuserobject = authUserRepository.findAuthUserByUsername(username);
+        result.put("code",200);
+        result.put("msg","获取科研人员信息成功");
+        result.put("authuser",authuserobject);
+        return result;
+    }
+
+    @ApiOperation(value = "获取科研机构信息接口")
+    @GetMapping("showinstitution/{instituteid}")
+    public Map<String, Object> showinstitution(@PathVariable("instituteid") String instituteid){
+        HashMap<String, Object> result = new HashMap<>();
+        Institution institutionobject = institutionRepository.findInstitutionByInstituteid(Integer.parseInt(instituteid));
+        result.put("code",200);
+        result.put("msg","获取科研机构信息成功");
+        result.put("authuser",institutionobject);
+        return result;
+    }
+
+}
Index: src/main/java/jingzhou/Controller/HotController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/Controller/HotController.java	(date 1607744330082)
+++ src/main/java/jingzhou/Controller/HotController.java	(date 1607744330082)
@@ -0,0 +1,48 @@
+package jingzhou.Controller;
+
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiOperation;
+import jingzhou.MySQLTable.InstitutionRank;
+import jingzhou.MySQLTable.PaperRank;
+import jingzhou.repository.InstitutionRankRepository;
+import jingzhou.repository.PaperRankRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.RestController;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+@Api(value = "热点信息管理子系统")
+@RestController
+public class HotController {
+    @Autowired
+    private InstitutionRankRepository institutionRankRepository;
+
+    @Autowired
+    private PaperRankRepository paperRankRepository;
+
+    @ApiOperation(value = "获取热点论文排名接口")
+    @GetMapping("showpaperrank")
+    public Map<String, Object> PaperRank(){
+        HashMap<String, Object> result = new HashMap<>();
+        List<PaperRank> allpaperrank = paperRankRepository.findAll();
+        result.put("code",200);
+        result.put("msg","获取热点论文排名成功");
+        result.put("allpaperrank", allpaperrank);
+        return result;
+    }
+
+    @ApiOperation(value = "获取科研成果排名接口")
+    @GetMapping("showinstitutionrank/{type}")
+    public Map<String, Object> showinstitutionrank(@PathVariable("type") String type){
+        HashMap<String, Object> result = new HashMap<>();
+        List<InstitutionRank> institutionrankselected = institutionRankRepository.findAllByType(type);
+        result.put("code",200);
+        result.put("msg","获取科研成果排名成功");
+        result.put("instituionrankselected",institutionrankselected);
+        return result;
+    }
+}
Index: src/main/java/jingzhou/Controller/GovernController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/Controller/GovernController.java	(date 1607744330082)
+++ src/main/java/jingzhou/Controller/GovernController.java	(date 1607744330082)
@@ -0,0 +1,64 @@
+package jingzhou.Controller;
+
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiOperation;
+import jingzhou.MySQLTable.AuthUser;
+import jingzhou.repository.AuthUserRepository;
+import jingzhou.repository.InstitutionRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.HashMap;
+import java.util.Map;
+
+@Api(value = "门户与学术管理子系统")
+public class GovernController {
+    @Autowired
+    AuthUserRepository authUserRepository;
+
+    @Autowired
+    InstitutionRepository institutionRepository;
+
+    @ApiOperation(value = "认领门户接口")
+    @PostMapping("claimportal")
+    public Map<String, Object> claimportal(@RequestParam("username") String username,@RequestParam("institutionname") String institutionname, @RequestParam("researchfield") String researchfield, @RequestParam("realname") String realname){
+        HashMap<String, Object> result = new HashMap<>();
+        AuthUser authUser = new AuthUser();
+        authUser.setUsername(username);
+        authUser.setInstitutionid(institutionRepository.findInstitutionByInstitutionname(institutionname).getInstituteid());
+        authUser.setResearchfield(researchfield);
+        authUser.setRealname(realname);
+        authUserRepository.save(authUser);
+        result.put("code",200);
+        result.put("msg","认领门户成功");
+        return result;
+
+    }
+
+    @ApiOperation(value = "门户信息修改接口")
+    @PostMapping("changeportal/{changetype}")
+    public Map<String, Object> changeportal(@PathVariable("changetype") String changetype, @RequestParam("username") String username, @RequestParam("changecontent") String changecontent){
+        HashMap<String, Object> result = new HashMap<>();
+        AuthUser authUser = authUserRepository.findAuthUserByUsername(username);
+        if(changetype.equals("researchfield")){
+            authUser.setResearchfield(changecontent);
+            result.put("code",201);
+            result.put("msg","门户信息中的研究领域修改成功");
+            return result;
+        }
+        else if(changetype.equals("realname")){
+            authUser.setRealname(changecontent);
+            result.put("code",202);
+            result.put("msg","门户信息中的真实姓名 修改成功");
+            return result;
+        }
+        else{
+            result.put("code",400);
+            result.put("msg","门户信息修改失败");
+            return result;
+        }
+    }
+
+}
Index: src/main/java/jingzhou/Controller/SocialController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/Controller/SocialController.java	(date 1607744330083)
+++ src/main/java/jingzhou/Controller/SocialController.java	(date 1607744330083)
@@ -0,0 +1,66 @@
+package jingzhou.Controller;
+
+import io.swagger.annotations.Api;
+import io.swagger.annotations.ApiOperation;
+import jingzhou.MySQLTable.Follow;
+import jingzhou.MySQLTable.Message;
+import jingzhou.repository.FollowRepository;
+import jingzhou.repository.MessageRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
+
+import java.util.*;
+
+@Api(value = "社交子系统")
+@RestController
+public class SocialController {
+    @Autowired
+    private FollowRepository followRepository;
+
+    @Autowired
+    private MessageRepository messageRepository;
+
+    @ApiOperation(value = "关注接口")
+    @PostMapping("follow")
+    public Map<String, Object> follow(@RequestParam("followerusername") String follower, @RequestParam("researchersuername") String researcher){
+        HashMap<String,Object> result = new HashMap<>();
+        Follow followobject = new Follow();
+        followobject.setFollower(follower);
+        followobject.setResearcher(researcher);
+        followRepository.save(followobject);
+        result.put("code",200);
+        result.put("msg","关注成功");
+        return result;
+    }
+
+    @ApiOperation(value = "生成动态")
+    @PostMapping("generatemessage")
+    public Map<String, Object> generatemessage(@RequestParam("sender") String sender, @RequestParam("content") String content){
+        HashMap<String,Object> result = new HashMap<>();
+        List<Follow> followList = followRepository.getFollowsByResearcher(sender);
+        Iterator<Follow> followIterator = followList.iterator();
+        while(followIterator.hasNext()){
+            Message message = new Message();
+            message.setMessageid(messageRepository.getMaxId()+1);
+            message.setSender(sender);
+            message.setReceiver(followIterator.next().getFollower());
+            message.setContent(content);
+            messageRepository.save(message);
+        }
+        result.put("code",200);
+        result.put("msg","生成动态成功");
+        return result;
+    }
+
+    @ApiOperation(value = "接收动态")
+    @GetMapping("receivemessage/{receiver}")
+    public Map<String, Object> receivemessage(@PathVariable("receiver") String receiver){
+        HashMap<String, Object> result = new HashMap<>();
+        List<Message> messages = messageRepository.findMessagesByReceiver(receiver);
+        result.put("code", 200);
+        result.put("msg","接收动态成功");
+        result.put("message",messages);
+        return result;
+    }
+
+}
Index: src/main/java/jingzhou/MySQLTable/PaperRank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\n\r\n@Entity\r\npublic class PaperRank {\r\n    @Id\r\n    private int id;\r\n    private int citation;\r\n    private String paperid;\r\n    private String authorid;\r\n    private String papername;\r\n    private String field;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public int getCitation() {\r\n        return citation;\r\n    }\r\n\r\n    public void setCitation(int citation) {\r\n        this.citation = citation;\r\n    }\r\n\r\n    public String getPaperid() {\r\n        return paperid;\r\n    }\r\n\r\n    public void setPaperid(String paperid) {\r\n        this.paperid = paperid;\r\n    }\r\n\r\n    public String getAuthorid() {\r\n        return authorid;\r\n    }\r\n\r\n    public void setAuthorid(String authorid) {\r\n        this.authorid = authorid;\r\n    }\r\n\r\n    public String getPapername() {\r\n        return papername;\r\n    }\r\n\r\n    public void setPapername(String papername) {\r\n        this.papername = papername;\r\n    }\r\n\r\n    public String getField() {\r\n        return field;\r\n    }\r\n\r\n    public void setField(String field) {\r\n        this.field = field;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/PaperRank.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/PaperRank.java	(date 1607744330085)
@@ -6,26 +6,26 @@
 @Entity
 public class PaperRank {
     @Id
-    private int id;
-    private int citation;
+    private Integer id;
+    private Integer citation;
     private String paperid;
     private String authorid;
     private String papername;
     private String field;
 
-    public int getId() {
+    public Integer getId() {
         return id;
     }
 
-    public void setId(int id) {
+    public void setId(Integer id) {
         this.id = id;
     }
 
-    public int getCitation() {
+    public Integer getCitation() {
         return citation;
     }
 
-    public void setCitation(int citation) {
+    public void setCitation(Integer citation) {
         this.citation = citation;
     }
 
Index: src/main/java/jingzhou/MySQLTable/InstitutionRank.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport jingzhou.idclass.InstitutionRankId;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.IdClass;\r\n\r\n@Entity\r\n@IdClass(InstitutionRankId.class)\r\npublic class InstitutionRank {\r\n    @Id\r\n    private int institution;\r\n    @Id\r\n    private String type;\r\n    int amount;\r\n\r\n    public int getInstitution() {\r\n        return institution;\r\n    }\r\n\r\n    public void setInstitution(int institution) {\r\n        this.institution = institution;\r\n    }\r\n\r\n    public String getType() {\r\n        return type;\r\n    }\r\n\r\n    public void setType(String type) {\r\n        this.type = type;\r\n    }\r\n\r\n    public int getAmount() {\r\n        return amount;\r\n    }\r\n\r\n    public void setAmount(int amount) {\r\n        this.amount = amount;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/InstitutionRank.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/InstitutionRank.java	(date 1607744330084)
@@ -10,16 +10,16 @@
 @IdClass(InstitutionRankId.class)
 public class InstitutionRank {
     @Id
-    private int institution;
+    private Integer institution;
     @Id
     private String type;
     int amount;
 
-    public int getInstitution() {
+    public Integer getInstitution() {
         return institution;
     }
 
-    public void setInstitution(int institution) {
+    public void setInstitution(Integer institution) {
         this.institution = institution;
     }
 
Index: src/main/java/jingzhou/repository/FollowRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.repository;\r\n\r\nimport jingzhou.MySQLTable.Follow;\r\nimport jingzhou.MySQLTable.User;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\n\r\nimport javax.transaction.Transactional;\r\n\r\npublic interface FollowRepository extends JpaRepository<Follow,Long> {\r\n    Follow findFollowByFollowerAndAndResearcher(int follower, int researcher);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/FollowRepository.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/repository/FollowRepository.java	(date 1607744347297)
@@ -1,11 +1,13 @@
 package jingzhou.repository;
 
 import jingzhou.MySQLTable.Follow;
-import jingzhou.MySQLTable.User;
 import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
 
-import javax.transaction.Transactional;
+import java.util.List;
 
-public interface FollowRepository extends JpaRepository<Follow,Long> {
-    Follow findFollowByFollowerAndAndResearcher(int follower, int researcher);
+@Repository
+public interface FollowRepository extends JpaRepository<Follow,String> {
+    Follow getFollowByFollowerAndResearcher(String follower,String researcher);
+    List<Follow> getFollowsByResearcher(String researcher);
 }
Index: src/main/java/jingzhou/MySQLTable/Institution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\n\r\n@Entity\r\npublic class Institution {\r\n    @Id\r\n    int instituteid;\r\n    String name;\r\n\r\n    public int getInstituteid() {\r\n        return instituteid;\r\n    }\r\n\r\n    public void setInstituteid(int instituteid) {\r\n        this.instituteid = instituteid;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/Institution.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/Institution.java	(date 1607744330084)
@@ -1,28 +1,31 @@
 package jingzhou.MySQLTable;
 
+import io.swagger.models.auth.In;
+
 import javax.persistence.Entity;
 import javax.persistence.Id;
 
 @Entity
 public class Institution {
     @Id
-    int instituteid;
-    String name;
+    Integer instituteid;
 
-    public int getInstituteid() {
+    String institutionname;
+
+    public Integer getInstituteid() {
         return instituteid;
     }
 
-    public void setInstituteid(int instituteid) {
+    public void setInstituteid(Integer instituteid) {
         this.instituteid = instituteid;
     }
 
-    public String getName() {
-        return name;
+    public String getInstitutionname() {
+        return institutionname;
     }
 
-    public void setName(String name) {
-        this.name = name;
+    public void setInstitutionname(String institutionname) {
+        this.institutionname = institutionname;
     }
 
 }
Index: src/main/java/jingzhou/MySQLTable/Message.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\n\r\n@Entity\r\npublic class Message {\r\n    @Id\r\n    private int messageid;\r\n    private int sender;\r\n    private int receiver;\r\n    private String content;\r\n\r\n    public int getMessageid() {\r\n        return messageid;\r\n    }\r\n\r\n    public void setMessageid(int messageid) {\r\n        this.messageid = messageid;\r\n    }\r\n\r\n    public int getSender() {\r\n        return sender;\r\n    }\r\n\r\n    public void setSender(int sender) {\r\n        this.sender = sender;\r\n    }\r\n\r\n    public int getReceiver() {\r\n        return receiver;\r\n    }\r\n\r\n    public void setReceiver(int receiver) {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    public String getContent() {\r\n        return content;\r\n    }\r\n\r\n    public void setContent(String content) {\r\n        this.content = content;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/Message.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/Message.java	(date 1607744330085)
@@ -6,32 +6,32 @@
 @Entity
 public class Message {
     @Id
-    private int messageid;
-    private int sender;
-    private int receiver;
+    private Integer messageid;
+    private String sender;
+    private String receiver;
     private String content;
 
-    public int getMessageid() {
+    public Integer getMessageid() {
         return messageid;
     }
 
-    public void setMessageid(int messageid) {
+    public void setMessageid(Integer messageid) {
         this.messageid = messageid;
     }
 
-    public int getSender() {
+    public String getSender() {
         return sender;
     }
 
-    public void setSender(int sender) {
+    public void setSender(String sender) {
         this.sender = sender;
     }
 
-    public int getReceiver() {
+    public String getReceiver() {
         return receiver;
     }
 
-    public void setReceiver(int receiver) {
+    public void setReceiver(String receiver) {
         this.receiver = receiver;
     }
 
Index: src/main/java/jingzhou/MySQLTable/Follow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport jingzhou.idclass.FollowId;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport javax.persistence.IdClass;\r\n\r\n\r\n@Entity\r\n@IdClass(FollowId.class)\r\npublic class Follow {\r\n    @Id\r\n    private int follower;\r\n\r\n    @Id\r\n    private int researcher;\r\n\r\n    public int getFollower() {\r\n        return follower;\r\n    }\r\n\r\n    public void setFollower(int follower) {\r\n        this.follower = follower;\r\n    }\r\n\r\n    public int getResearcher() {\r\n        return researcher;\r\n    }\r\n\r\n    public void setResearcher(int researcher) {\r\n        this.researcher = researcher;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/Follow.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/Follow.java	(date 1607744330084)
@@ -11,24 +11,24 @@
 @IdClass(FollowId.class)
 public class Follow {
     @Id
-    private int follower;
+    private String follower;
 
     @Id
-    private int researcher;
+    private String researcher;
 
-    public int getFollower() {
+    public String getFollower() {
         return follower;
     }
 
-    public void setFollower(int follower) {
+    public void setFollower(String follower) {
         this.follower = follower;
     }
 
-    public int getResearcher() {
+    public String getResearcher() {
         return researcher;
     }
 
-    public void setResearcher(int researcher) {
+    public void setResearcher(String researcher) {
         this.researcher = researcher;
     }
 
Index: src/main/java/jingzhou/MySQLTable/Patent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport java.util.Date;\r\n\r\n@Entity\r\npublic class Patent {\r\n    @Id\r\n    int patentid;\r\n    String inventor;\r\n    Date pubdate;\r\n    String name;\r\n    String pubnumber;\r\n    String patentnumber;\r\n    String applicant;\r\n    String address;\r\n    String classification;\r\n    String abstractcontent;\r\n    Date appdate;\r\n\r\n    public int getPatentid() {\r\n        return patentid;\r\n    }\r\n\r\n    public void setPatentid(int patentid) {\r\n        this.patentid = patentid;\r\n    }\r\n\r\n    public String getInventor() {\r\n        return inventor;\r\n    }\r\n\r\n    public void setInventor(String inventor) {\r\n        this.inventor = inventor;\r\n    }\r\n\r\n    public Date getPubdate() {\r\n        return pubdate;\r\n    }\r\n\r\n    public void setPubdate(Date pubdate) {\r\n        this.pubdate = pubdate;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getPubnumber() {\r\n        return pubnumber;\r\n    }\r\n\r\n    public void setPubnumber(String pubnumber) {\r\n        this.pubnumber = pubnumber;\r\n    }\r\n\r\n    public String getPatentnumber() {\r\n        return patentnumber;\r\n    }\r\n\r\n    public void setPatentnumber(String patentnumber) {\r\n        this.patentnumber = patentnumber;\r\n    }\r\n\r\n    public String getApplicant() {\r\n        return applicant;\r\n    }\r\n\r\n    public void setApplicant(String applicant) {\r\n        this.applicant = applicant;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public String getClassification() {\r\n        return classification;\r\n    }\r\n\r\n    public void setClassification(String classification) {\r\n        this.classification = classification;\r\n    }\r\n\r\n    public String getAbstractcontent() {\r\n        return abstractcontent;\r\n    }\r\n\r\n    public void setAbstractcontent(String abstractcontent) {\r\n        this.abstractcontent = abstractcontent;\r\n    }\r\n\r\n    public Date getAppdate() {\r\n        return appdate;\r\n    }\r\n\r\n    public void setAppdate(Date appdate) {\r\n        this.appdate = appdate;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/Patent.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/Patent.java	(date 1607744330085)
@@ -7,7 +7,7 @@
 @Entity
 public class Patent {
     @Id
-    int patentid;
+    Integer patentid;
     String inventor;
     Date pubdate;
     String name;
@@ -19,11 +19,11 @@
     String abstractcontent;
     Date appdate;
 
-    public int getPatentid() {
+    public Integer getPatentid() {
         return patentid;
     }
 
-    public void setPatentid(int patentid) {
+    public void setPatentid(Integer patentid) {
         this.patentid = patentid;
     }
 
Index: src/main/java/jingzhou/repository/MessageRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/MessageRepository.java	(date 1607744330088)
+++ src/main/java/jingzhou/repository/MessageRepository.java	(date 1607744330088)
@@ -0,0 +1,14 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.Message;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.List;
+
+public interface MessageRepository extends JpaRepository<Message, Integer> {
+    List<Message> findMessagesByReceiver(String receiver);
+
+    @Query("SELECT coalesce(max(messageid),0) FROM Message")
+    Integer getMaxId();
+}
Index: src/main/java/jingzhou/repository/InstitutionRankRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/InstitutionRankRepository.java	(date 1607744330087)
+++ src/main/java/jingzhou/repository/InstitutionRankRepository.java	(date 1607744330087)
@@ -0,0 +1,12 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.InstitutionRank;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface InstitutionRankRepository extends JpaRepository<InstitutionRank, Integer> {
+    List<InstitutionRank> findAllByType(String type);
+}
Index: src/main/java/jingzhou/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.repository;\r\n\r\nimport jingzhou.MySQLTable.User;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.util.List;\r\n\r\n@Repository\r\npublic interface UserRepository extends JpaRepository<User,Long> {\r\n    User findUserById(int id);\r\n    User findUserByUsernameAndPassword(String username,String password);\r\n    User findUserByUsername(String username);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/UserRepository.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/repository/UserRepository.java	(date 1607744330206)
@@ -7,8 +7,7 @@
 import java.util.List;
 
 @Repository
-public interface UserRepository extends JpaRepository<User,Long> {
-    User findUserById(int id);
+public interface UserRepository extends JpaRepository<User,String> {
     User findUserByUsernameAndPassword(String username,String password);
     User findUserByUsername(String username);
 }
Index: src/main/java/jingzhou/repository/PatentRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/repository/PatentRepository.java	(date 1607744330088)
+++ src/main/java/jingzhou/repository/PatentRepository.java	(date 1607744330088)
@@ -0,0 +1,9 @@
+package jingzhou.repository;
+
+import jingzhou.MySQLTable.Patent;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public interface PatentRepository extends JpaRepository<Patent, Integer>{
+}
Index: src/main/java/jingzhou/MySQLTable/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\nimport java.util.Date;\r\n\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    private int id;\r\n    private String password;\r\n    private int isauth;\r\n    private int downloadauth;\r\n    private String username;\r\n    private String email;\r\n    private Date time;\r\n\r\n    public int getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public int getIsauth() {\r\n        return isauth;\r\n    }\r\n\r\n    public void setIsauth(int isauth) {\r\n        this.isauth = isauth;\r\n    }\r\n\r\n    public int getDownloadauth() {\r\n        return downloadauth;\r\n    }\r\n\r\n    public void setDownloadauth(int downloadauth) {\r\n        this.downloadauth = downloadauth;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public Date getTime() {\r\n        return time;\r\n    }\r\n\r\n    public void setTime(Date time) {\r\n        this.time = time;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/User.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/User.java	(date 1607744330086)
@@ -6,23 +6,20 @@
 
 @Entity
 public class User {
+    //用户名
     @Id
-    private int id;
+    private String username;
+    //密码
     private String password;
+    //是否为认证用户，0无权限，1有权限
     private int isauth;
+    //是否有下载权限，0无权限，1有权限
     private int downloadauth;
-    private String username;
+    //邮箱
     private String email;
+    //注册时间
     private Date time;
 
-    public int getId() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id = id;
-    }
-
     public String getPassword() {
         return password;
     }
Index: src/main/java/jingzhou/MySQLTable/AuthUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jingzhou.MySQLTable;\r\n\r\nimport javax.persistence.Entity;\r\nimport javax.persistence.Id;\r\n\r\n@Entity\r\npublic class AuthUser {\r\n    @Id\r\n    private int authuserid;\r\n    private String institutionid;\r\n    private String achievements;\r\n    private String researchfield;\r\n    private String realname;\r\n    //nosql中的author id字段比较长\r\n    private String authorid;\r\n    private int userid;\r\n\r\n    public int getAuthuserid() {\r\n        return authuserid;\r\n    }\r\n\r\n    public void setAuthuserid(int authuserid) {\r\n        this.authuserid = authuserid;\r\n    }\r\n\r\n    public String getInstitutionid() {\r\n        return institutionid;\r\n    }\r\n\r\n    public void setInstitutionid(String institutionid) {\r\n        this.institutionid = institutionid;\r\n    }\r\n\r\n    public String getAchievements() {\r\n        return achievements;\r\n    }\r\n\r\n    public void setAchievements(String achievements) {\r\n        this.achievements = achievements;\r\n    }\r\n\r\n    public String getResearchfield() {\r\n        return researchfield;\r\n    }\r\n\r\n    public void setResearchfield(String researchfield) {\r\n        this.researchfield = researchfield;\r\n    }\r\n\r\n    public String getRealname() {\r\n        return realname;\r\n    }\r\n\r\n    public void setRealname(String realname) {\r\n        this.realname = realname;\r\n    }\r\n\r\n    public String getAuthorid() {\r\n        return authorid;\r\n    }\r\n\r\n    public void setAuthorid(String authorid) {\r\n        this.authorid = authorid;\r\n    }\r\n\r\n    public int getUserid() {\r\n        return userid;\r\n    }\r\n\r\n    public void setUserid(int userid) {\r\n        this.userid = userid;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/jingzhou/MySQLTable/AuthUser.java	(revision bc38f3c6b368655da979012e0ce391a7435cb181)
+++ src/main/java/jingzhou/MySQLTable/AuthUser.java	(date 1607744330083)
@@ -5,29 +5,29 @@
 
 @Entity
 public class AuthUser {
+    //这里的username和user表中的username相同
     @Id
-    private int authuserid;
-    private String institutionid;
+    private String username;
+    private Integer institutionid;
     private String achievements;
     private String researchfield;
     private String realname;
     //nosql中的author id字段比较长
     private String authorid;
-    private int userid;
 
-    public int getAuthuserid() {
-        return authuserid;
+    public String getUsername() {
+        return username;
     }
 
-    public void setAuthuserid(int authuserid) {
-        this.authuserid = authuserid;
+    public void setUsername(String username) {
+        this.username = username;
     }
 
-    public String getInstitutionid() {
+    public Integer getInstitutionid() {
         return institutionid;
     }
 
-    public void setInstitutionid(String institutionid) {
+    public void setInstitutionid(Integer institutionid) {
         this.institutionid = institutionid;
     }
 
@@ -63,12 +63,4 @@
         this.authorid = authorid;
     }
 
-    public int getUserid() {
-        return userid;
-    }
-
-    public void setUserid(int userid) {
-        this.userid = userid;
-    }
-
 }
